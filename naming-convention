#! /bin/bash
set -u

## Returns a grep regexp to look for
## forbidden spellings.
function getForbiddenPat() {
  pat=$1
  if [[ "${pat:0:1}" == "!" ]]; then
    aux=${pat:1}
    echo "${aux//\|/[\\n -]?}"
  elif [[ "$pat" =~ .*\|.* ]]; then
    echo "${pat//\|/[\\n -]}"
  elif [[ "$pat" =~ .*\ .* ]]; then
    echo "${pat// /[-]?}"
  elif [[ "$pat" =~ .*-.* ]]; then
    echo "${pat//-/[ \\n]?}"
  fi
}

enforce=("data|type"    # enforce spelling of 'datatype', forbids 'data-type' and 'data type'
         "fix|point"
         "!fixed|point" # forbids all combinations of fixedpoint
         "sub|tree"
         "pattern functor"
         "type level"
         "type safe"
         "well typed"
         "edit script"
         "general purpose"
         "real world"
         "type class"
         "type family"
         "non-interfering"
         "non-trivial"
         "anti-unif"
         )

ok=true
IFS=,
for enf in ${enforce[*]}; do
  pat=$(getForbiddenPat "$enf")
  echo "{Enforcing: $pat}"
  # grep -n --colour "$pat" src/*.lhs
  pcregrep -i -M -n -H --colour "$pat" src/*.lhs
  if [[ "$?" == "0" ]]; then
    ok=false
  fi
done

if $ok; then
  echo "You're ok! :)"
  exit 0
else
  echo "Be congruent!"
  exit 1
fi
