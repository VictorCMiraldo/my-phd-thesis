D Fig.2.5.(A) "order preserving" is bizarre since we have not quite
  defined an order.

We have an order. the def reads "order preserving partial 
bijection between the nodes of a flattened representation
of t and u according to their preorder traversal"

D Fig.2.5.(D) s/f/d/ and s/g/e/, no?

No

**> Figure 2.4: 'Tree' should perhaps explicitly be called
  'RoseTree'. Also, much of the talk around here is about the fact
  that the representation is somewhat "untyped". The story would be
  much more natural if you were dealing with S-exp.

**> Section 2.1.3: it seems to me that all these problems already
  existed on text-based diffs. It seems that the message is that
  having more structure to work with (as input to the problem) lead us
  to try and preserve them further down the line. This is the key
  difference with line-based diffs, which is not so worries about
  losing structure it didn't have in the first place.

D Section 3.1.2.2. Why call these 'combinators', isn't it just the
  algebra of functors and their fixpoint?

It is standard to call them combinators.

D Section 3.3. It's a bit weird to present one library and then
  another to workaround a bug while not giving a take-away comparison
  between the two.

Added one paragraph; but the biggest take-away is that one works and
the other doesn't (because of the GHC bug), I guess.

> Section 4. That section was not a pleasant read: it's a shitload of
  (literate) programs!

> Section 5.1.2 up to Section 5.4 (excluded). Struggle again.

> Section 5.4. the term "accidental sharing" should perhaps be
  mentioned there.

> Section 6.3. about Patience. duplication in a patch ought to be
  occuring only on small atoms (typically, variables) since it would
  be a significant code smell otherwise (actual code duplication).

> Section 7.2 - The decision of the candidate to spread pointers to
  future work across the dissertation in the form of "personal
  comments" empties this chapter to just three pages, which is rather
  weak a "coda" for an interesting dissertation. I can accept that
  giving such pointers "in place" saves quoting context, but future
  readers who jump to the last chapter searching for inspiration on
  how to continue the work will find very little there. As already
  suggested in (*) and elsewhere, such side comments should slide into
  something like section 7.3 - "Future work" or something similar. In
  doing this, first person singular should be avoided because it is
  not standard in scientific writing.

D 100: "at least 26% of the conflicts [..] could have been
  automatically merge".  Taking into account the weight you had to
  lift, that seems disappointingly low. Ha, well.. :(

I know... :(

X 175: Shouldn't the left-hand assertion be "assert(obj, hasSize(5))",
  as on l177?

Nope, this is correct.

D 186: It would be helpful to instantiate this generic schema for Unix
  diff: type parameter a is [String], and Patch a is...?

I added a comment two paras below.

D 198-200: "It represents patches [..] works by enumerating all
  possible patches [..]". written like this, this sounds like `diff`
  is a silly brute-force tool.

Indeed; I attempted to change a little.

D 312: "the algorithms [..] are inherently slow". We are only talking
  about algorithms on trees, right?

Yes, I removed this anyway.

D 353: I think the first clause should be "apply [] ss = ss"

I understand, but that is not how /apply/ is defined in the literature;
I'll stick with the standard definition.

D 418: You could make apply (Ins l : []) [] = Nothing if arity l /= 0,
  and more generally guard your use of takeDrop within the Maybe
  monad.

Indeed; but there I'm talking about untyped trees and hence we have
no arities to decide that.

X 419: "to abide by a certain schema". s/by/to/ ?

X 434: Give an example of two different edit scripts that perform the
  same transformation.

I have given this example in the previous section and 
described it: one can shuffle insertions and deletions
in any way we see fit until a copy occurs.

X 436: "notion of tree mapping". Is that standard terminology?

Yes.

**> 469: "two distinct edit-scripts". This language has not been defined
  before.

I don't understand this remark

**> 476: "hard to predict". Same remark as before.

**> 817-822: about losing internal sum-of-products structure: you never
  talk explicitly about what is gained/losed by each representation.

Hmmm... I will think about this.

**> 850: "deep generic representation". Is that a technical term? Later
  on, you develop a systematic 'deep' vs. 'shallow' discussion but, at
  this point, no one knows what you are aiming to.

It is a technical term. I will try to rephrase this.

D 915-920: about crush. This is feels like some sort of `traverse`,
  especially if [b] where generalized to 't b' for an arbitrary
  applicative 't'.

I'd say its more like a fold; generalizing to an applicative 't' is
not easy here. (I think!)

**> 1305-1313 (*) - I find this "informal note", or "side comment" if
  you wish, written in first person singular (and several others to
  come) rather non standard in a PhD dissertation. Perhaps this could
  be given in a footnote? Or moved to the conclusions / future work
  section? In any case, the use of first person singular should be
  avoided.
**> 1305: I don't think these "notes to self" belong peppered throughout
  the objective scientific content of the dissertation. I recommend
  collecting them together in your conclusions: changes of plan,
  surprises, things you ran out of time for, things you'd do
  differently if you were to do it again, etc, are all useful to the
  reader and follow-up researcher, but you should clearly distinguish
  the personal from the scientific.

**> 1344: "being having clear"

I did not find this on line 1344

X 1505: "defining a type-indexes" s/indexes/indexed/

Didn't find this in there.

**> 1514: "list of possible zippers for a value with holes". It feels
  like the comonad presentation of zipper could be useful here.

How so? I can't immediatly see this.

**> 1532: please see (*) above

Ok; I will get rid of those.

D 1644: The disclaimer about joint work should not be buried here; it
  should be declared up front, in Ch 1 or earlier.

I'm confused; there are two disclaimers and they are mentioned
in the /Contributions and Outline/ section in Ch 1. Anyway,
I did try to make it clearer in Ch 1, I hope its upfront enough.

**> 1908: "will always be a computationally inefficient process". Is
  that proved? Feels strongly worded.

D 2123: The program could be written more elegantly. The LeafC case is
  neater using Control.Bool.guard': go (LeafC n) (Leaf n') = guard'
  (n==n') and the BinC and TriC cases are neater with Kleisli
  composition: go (BinC x y) (Bin a b) = go x a >=> go y b The Hole
  case is probably best using do notation.

I want it to be the simplest Haskell at this point yet.
Moreover, if I omit the m parm in the first clauses, I'll have to
omit it in all clauses, which means the case for Hole will be
pretty nasty.

D 2183: You've made a big thing about hdiff providing more operations,
  such as duplication. But the Patience mode prohibits duplication,
  right?

Correct, but it still enables permutations.

D 2339: Isn't this better written [[ p . q ]] = [[ q ]] >=> [[ p ]] ?

It is, but I want to not rely too much on Hashell here.

**> 2650: GRAMMAR: "two non-overlapping changes"

Did not find this.

D 2765-2773: you told the same zipper story earlier I think.

Probably... still, I'd repeat it here to refresh the reader's memory.

**> 2881: This whole approach seems very ad hoc! What properties can you
  show of it?

Well, it is ad-hoc! 

**> 3093: please see (*) above. Clearly, this side comment should go to
  a proper future work section.

**> 3215: "tells us" -> "telling us"

Can't find it.

**> 3229: "I never had the time": avoid first person singular and move
  to a proper future work section.

I kind of prefer the future work localized to the chapters;
I can link to it on the thesis-wide section of future work.

**> 3249: "I would have liked to look at" -> "could have been looked at"
  (again, this is out-of-place future work)

**> 3338: "929 used more than 8GB of memory". How is that even possible?
  This should be discussed.

I don't understand the surprise. But sure, will discuss.

**> 3369-3378: about the ambiguity between "same merge" and "human made
  changes during merge". An alternative would have been to run the
  unit tests to check if things were right on your side.

Which tests? The repository tests? This would involve building it
at every commit, which might not be possible and would take
considerably longer.

**> 10000: References: capitalization
  [7,8,10,19,22,31,36,37,53,57,62,69,73,77,83,92,95]. Pages X-Y or
  Volume Z of what? [22,37,60,75,98]. SPJ is "Peyton Jones, Simon"
  [43,49,95]. More data needed [59]. Duplicate "in" [78]. [102] was in
  ICFP. Bram Cohen [17] has been filed under his first name, not
  surname like everyone else.

I fixed the capitalization of {H}askell and {XML} and fixed the
other problems; some of the aforementioned cases I found no problems.
