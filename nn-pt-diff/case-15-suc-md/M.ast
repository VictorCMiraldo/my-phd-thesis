(CompilationUnit
 (Just
  (PackageDecl
   (Name
    (:
     (Ident "org")
     (:
      (Ident "springframework")
      (: (Ident "boot") (: (Ident "logging") [])))))))
 (:
  (ImportDecl
   False
   (Name (: (Ident "java") (: (Ident "util") (: (Ident "Collections") []))))
   False)
  (:
   (ImportDecl
    False
    (Name (: (Ident "java") (: (Ident "util") (: (Ident "LinkedHashMap") []))))
    False)
   (:
    (ImportDecl
     False
     (Name (: (Ident "java") (: (Ident "util") (: (Ident "Map") []))))
     False)
    (:
     (ImportDecl
      False
      (Name
       (:
        (Ident "org")
        (:
         (Ident "springframework")
         (: (Ident "util") (: (Ident "ClassUtils") [])))))
      False)
     (:
      (ImportDecl
       False
       (Name
        (:
         (Ident "org")
         (:
          (Ident "springframework")
          (: (Ident "util") (: (Ident "StringUtils") [])))))
       False)
      [])))))
 (:
  (ClassTypeDecl
   (ClassDecl
    (: Public (: Abstract []))
    (Ident "LoggingSystem")
    []
    Nothing
    []
    (ClassBody
     (:
      (MemberDecl
       (FieldDecl
        (: Public (: Static (: Final [])))
        (RefType (ClassRefType (ClassType (: ((,) (Ident "String") []) []))))
        (:
         (VarDecl
          (VarId (Ident "SYSTEM_PROPERTY"))
          (Just
           (InitExp
            (MethodInv
             (PrimaryMethodCall
              (ClassLit
               (Just
                (RefType
                 (ClassRefType
                  (ClassType (: ((,) (Ident "LoggingSystem") []) []))))))
              []
              (Ident "getName")
              [])))))
         [])))
      (:
       (MemberDecl
        (FieldDecl
         (: Private (: Static (: Final [])))
         (RefType
          (ClassRefType
           (ClassType
            (:
             ((,)
              (Ident "Map")
              (:
               (ActualType
                (ClassRefType (ClassType (: ((,) (Ident "String") []) []))))
               (:
                (ActualType
                 (ClassRefType (ClassType (: ((,) (Ident "String") []) []))))
                [])))
             []))))
         (: (VarDecl (VarId (Ident "SYSTEMS")) Nothing) [])))
       (:
        (InitDecl
         True
         (Block
          (:
           (LocalVars
            []
            (RefType
             (ClassRefType
              (ClassType
               (:
                ((,)
                 (Ident "Map")
                 (:
                  (ActualType
                   (ClassRefType (ClassType (: ((,) (Ident "String") []) []))))
                  (:
                   (ActualType
                    (ClassRefType (ClassType (: ((,) (Ident "String") []) []))))
                   [])))
                []))))
            (:
             (VarDecl
              (VarId (Ident "systems"))
              (Just
               (InitExp
                (InstanceCreation
                 []
                 (TypeDeclSpecifier
                  (ClassType
                   (:
                    ((,)
                     (Ident "LinkedHashMap")
                     (:
                      (ActualType
                       (ClassRefType
                        (ClassType (: ((,) (Ident "String") []) []))))
                      (:
                       (ActualType
                        (ClassRefType
                         (ClassType (: ((,) (Ident "String") []) []))))
                       [])))
                    [])))
                 []
                 Nothing))))
             []))
           (:
            (BlockStmt
             (ExpStmt
              (MethodInv
               (MethodCall
                (Name (: (Ident "systems") (: (Ident "put") [])))
                (:
                 (Lit (String "ch.qos.logback.core.Appender"))
                 (:
                  (Lit
                   (String
                    "org.springframework.boot.logging.logback.LogbackLoggingSystem"))
                  []))))))
            (:
             (BlockStmt
              (ExpStmt
               (MethodInv
                (MethodCall
                 (Name (: (Ident "systems") (: (Ident "put") [])))
                 (:
                  (Lit (String "org.apache.logging.log4j.LogManager"))
                  (:
                   (Lit
                    (String
                     "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"))
                   []))))))
             (:
              (BlockStmt
               (ExpStmt
                (MethodInv
                 (MethodCall
                  (Name (: (Ident "systems") (: (Ident "put") [])))
                  (:
                   (Lit (String "org.apache.log4j.PropertyConfigurator"))
                   (:
                    (Lit
                     (String
                      "org.springframework.boot.logging.log4j.Log4JLoggingSystem"))
                    []))))))
              (:
               (BlockStmt
                (ExpStmt
                 (MethodInv
                  (MethodCall
                   (Name (: (Ident "systems") (: (Ident "put") [])))
                   (:
                    (Lit (String "java.util.logging.LogManager"))
                    (:
                     (Lit
                      (String
                       "org.springframework.boot.logging.java.JavaLoggingSystem"))
                     []))))))
               (:
                (BlockStmt
                 (ExpStmt
                  (Assign
                   (NameLhs (Name (: (Ident "SYSTEMS") [])))
                   EqualA
                   (MethodInv
                    (MethodCall
                     (Name
                      (:
                       (Ident "Collections")
                       (: (Ident "unmodifiableMap") [])))
                     (: (ExpName (Name (: (Ident "systems") []))) []))))))
                []))))))))
        (:
         (MemberDecl
          (MethodDecl
           (: Public (: Abstract []))
           []
           Nothing
           (Ident "beforeInitialize")
           []
           []
           Nothing
           (MethodBody Nothing)))
         (:
          (MemberDecl
           (MethodDecl
            (: Public (: Abstract []))
            []
            Nothing
            (Ident "initialize")
            (:
             (FormalParam
              []
              (RefType
               (ClassRefType (ClassType (: ((,) (Ident "String") []) []))))
              False
              (VarId (Ident "configLocation")))
             (:
              (FormalParam
               []
               (RefType
                (ClassRefType (ClassType (: ((,) (Ident "LogFile") []) []))))
               False
               (VarId (Ident "logFile")))
              []))
            []
            Nothing
            (MethodBody Nothing)))
          (:
           (MemberDecl
            (MethodDecl
             (: Public [])
             []
             Nothing
             (Ident "cleanUp")
             []
             []
             Nothing
             (MethodBody (Just (Block [])))))
           (:
            (MemberDecl
             (MethodDecl
              (: Public (: Abstract []))
              []
              Nothing
              (Ident "setLogLevel")
              (:
               (FormalParam
                []
                (RefType
                 (ClassRefType (ClassType (: ((,) (Ident "String") []) []))))
                False
                (VarId (Ident "loggerName")))
               (:
                (FormalParam
                 []
                 (RefType
                  (ClassRefType (ClassType (: ((,) (Ident "LogLevel") []) []))))
                 False
                 (VarId (Ident "level")))
                []))
              []
              Nothing
              (MethodBody Nothing)))
            (:
             (MemberDecl
              (MethodDecl
               (: Public (: Static []))
               []
               (Just
                (RefType
                 (ClassRefType
                  (ClassType (: ((,) (Ident "LoggingSystem") []) [])))))
               (Ident "get")
               (:
                (FormalParam
                 []
                 (RefType
                  (ClassRefType
                   (ClassType (: ((,) (Ident "ClassLoader") []) []))))
                 False
                 (VarId (Ident "classLoader")))
                [])
               []
               Nothing
               (MethodBody
                (Just
                 (Block
                  (:
                   (LocalVars
                    []
                    (RefType
                     (ClassRefType
                      (ClassType (: ((,) (Ident "String") []) []))))
                    (:
                     (VarDecl
                      (VarId (Ident "loggingSystem"))
                      (Just
                       (InitExp
                        (MethodInv
                         (MethodCall
                          (Name
                           (: (Ident "System") (: (Ident "getProperty") [])))
                          (:
                           (ExpName (Name (: (Ident "SYSTEM_PROPERTY") [])))
                           []))))))
                     []))
                   (:
                    (BlockStmt
                     (IfThen
                      (MethodInv
                       (MethodCall
                        (Name
                         (: (Ident "StringUtils") (: (Ident "hasLength") [])))
                        (: (ExpName (Name (: (Ident "loggingSystem") []))) [])))
                      (StmtBlock
                       (Block
                        (:
                         (BlockStmt
                          (Return
                           (Just
                            (MethodInv
                             (MethodCall
                              (Name (: (Ident "get") []))
                              (:
                               (ExpName (Name (: (Ident "classLoader") [])))
                               (:
                                (ExpName (Name (: (Ident "loggingSystem") [])))
                                [])))))))
                         [])))))
                    (:
                     (BlockStmt
                      (EnhancedFor
                       []
                       (RefType
                        (ClassRefType
                         (ClassType
                          (:
                           ((,) (Ident "Map") [])
                           (:
                            ((,)
                             (Ident "Entry")
                             (:
                              (ActualType
                               (ClassRefType
                                (ClassType (: ((,) (Ident "String") []) []))))
                              (:
                               (ActualType
                                (ClassRefType
                                 (ClassType (: ((,) (Ident "String") []) []))))
                               [])))
                            [])))))
                       (Ident "entry")
                       (MethodInv
                        (MethodCall
                         (Name (: (Ident "SYSTEMS") (: (Ident "entrySet") [])))
                         []))
                       (StmtBlock
                        (Block
                         (:
                          (BlockStmt
                           (IfThen
                            (MethodInv
                             (MethodCall
                              (Name
                               (:
                                (Ident "ClassUtils")
                                (: (Ident "isPresent") [])))
                              (:
                               (MethodInv
                                (MethodCall
                                 (Name
                                  (: (Ident "entry") (: (Ident "getKey") [])))
                                 []))
                               (:
                                (ExpName (Name (: (Ident "classLoader") [])))
                                []))))
                            (StmtBlock
                             (Block
                              (:
                               (BlockStmt
                                (Return
                                 (Just
                                  (MethodInv
                                   (MethodCall
                                    (Name (: (Ident "get") []))
                                    (:
                                     (ExpName
                                      (Name (: (Ident "classLoader") [])))
                                     (:
                                      (MethodInv
                                       (MethodCall
                                        (Name
                                         (:
                                          (Ident "entry")
                                          (: (Ident "getValue") [])))
                                        []))
                                      [])))))))
                               [])))))
                          [])))))
                     (:
                      (BlockStmt
                       (Throw
                        (InstanceCreation
                         []
                         (TypeDeclSpecifier
                          (ClassType
                           (: ((,) (Ident "IllegalStateException") []) [])))
                         (:
                          (Lit (String "No suitable logging system located"))
                          [])
                         Nothing)))
                      [])))))))))
             (:
              (MemberDecl
               (MethodDecl
                (: Private (: Static []))
                []
                (Just
                 (RefType
                  (ClassRefType
                   (ClassType (: ((,) (Ident "LoggingSystem") []) [])))))
                (Ident "get")
                (:
                 (FormalParam
                  []
                  (RefType
                   (ClassRefType
                    (ClassType (: ((,) (Ident "ClassLoader") []) []))))
                  False
                  (VarId (Ident "classLoader")))
                 (:
                  (FormalParam
                   []
                   (RefType
                    (ClassRefType (ClassType (: ((,) (Ident "String") []) []))))
                   False
                   (VarId (Ident "loggingSystemClass")))
                  []))
                []
                Nothing
                (MethodBody
                 (Just
                  (Block
                   (:
                    (BlockStmt
                     (Try
                      (Block
                       (:
                        (LocalVars
                         []
                         (RefType
                          (ClassRefType
                           (ClassType
                            (:
                             ((,) (Ident "Class") (: (Wildcard Nothing) []))
                             []))))
                         (:
                          (VarDecl
                           (VarId (Ident "systemClass"))
                           (Just
                            (InitExp
                             (MethodInv
                              (MethodCall
                               (Name
                                (:
                                 (Ident "ClassUtils")
                                 (: (Ident "forName") [])))
                               (:
                                (ExpName
                                 (Name (: (Ident "loggingSystemClass") [])))
                                (:
                                 (ExpName (Name (: (Ident "classLoader") [])))
                                 [])))))))
                          []))
                        (:
                         (BlockStmt
                          (Return
                           (Just
                            (Cast
                             (RefType
                              (ClassRefType
                               (ClassType
                                (: ((,) (Ident "LoggingSystem") []) []))))
                             (MethodInv
                              (PrimaryMethodCall
                               (MethodInv
                                (MethodCall
                                 (Name
                                  (:
                                   (Ident "systemClass")
                                   (: (Ident "getConstructor") [])))
                                 (:
                                  (ClassLit
                                   (Just
                                    (RefType
                                     (ClassRefType
                                      (ClassType
                                       (:
                                        ((,) (Ident "ClassLoader") [])
                                        []))))))
                                  [])))
                               []
                               (Ident "newInstance")
                               (:
                                (ExpName (Name (: (Ident "classLoader") [])))
                                [])))))))
                         [])))
                      (:
                       (Catch
                        (FormalParam
                         []
                         (RefType
                          (ClassRefType
                           (ClassType (: ((,) (Ident "Exception") []) []))))
                         False
                         (VarId (Ident "ex")))
                        (Block
                         (:
                          (BlockStmt
                           (Throw
                            (InstanceCreation
                             []
                             (TypeDeclSpecifier
                              (ClassType
                               (: ((,) (Ident "IllegalStateException") []) [])))
                             (: (ExpName (Name (: (Ident "ex") []))) [])
                             Nothing)))
                          [])))
                       [])
                      Nothing))
                    []))))))
              []))))))))))))
  []))
